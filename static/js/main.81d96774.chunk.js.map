{"version":3,"sources":["assets/joystick.png","assets/games sync /^/.//.*/.png$","assets/games/click.png","assets/games/snake.png","components/Home.tsx","firebase.ts","components/Games.tsx","components/games/Click.tsx","components/Play.tsx","components/GamesList.tsx","components/About.tsx","components/Score.tsx","components/HighScores.tsx","components/Footer.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","Home","fire","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Games","title","description","localGame","className","src","require","alt","Click","useState","score","setScore","playerName","setPlayerName","onClick","type","onChange","event","target","value","console","log","placeholder","firestore","collection","doc","add","name","Play","gameId","useParams","GamesList","gamesList","setGamesList","useEffect","onSnapshot","snapshot","docs","match","useRouteMatch","gamesItems","game","data","to","url","key","exact","path","About","href","rel","role","aria-label","Score","scores","setScores","orderBy","limit","scoreItems","i","length","HighScores","games","setGames","Footer","currentYear","Date","getFullYear","App","basename","process","logo","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.81d96774.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/joystick.4993166b.png\";","var map = {\n\t\"./click.png\": 46,\n\t\"./snake.png\": 47\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 45;","module.exports = __webpack_public_path__ + \"static/media/click.3a97e539.png\";","module.exports = __webpack_public_path__ + \"static/media/snake.3a97e539.png\";","import React from 'react';\n\nconst Home: React.FC = () => {\n    return (\n        <div>\n            Welcome to Games!\n        </div>\n    );\n};\n\nexport default Home;","import firebase from 'firebase';\n\nlet config = {\n    apiKey: \"AIzaSyDvZT4xc_gYVKmT7tB4WcyEXcxZtwLe0y4\",\n    authDomain: \"games-c5987.firebaseapp.com\",\n    databaseURL: \"https://games-c5987.firebaseio.com\",\n    projectId: \"games-c5987\",\n    storageBucket: \"games-c5987.appspot.com\",\n    messagingSenderId: \"534185131808\",\n    appId: \"1:534185131808:web:5318c1ce5390916185e145\"\n};\n\nlet fire = firebase.initializeApp(config);\nexport default fire;","import React from 'react';\n// import { useParams } from 'react-router-dom';\n\ninterface GamesProps {\n    title: string,\n    id: string,\n    description: string,\n    localGame: boolean\n}\n\nconst Games: React.FC<GamesProps> = ({title, id, description, localGame}) => {\n    // console.log(title, id);\n\n    return (\n        <main className=\"game-container\">\n            {/* {game} */}\n            <div className=\"game\">\n                {/* <a href=\"./\"> */}\n                    <img className=\"game-thumbnail\" src={ require(`../assets/games/${id}.png`)} alt=\"\" />\n                {/* </a> */}\n                <br />\n                {/* <a href=\"./\"> */}\n                    {title}\n                {/* </a> */}\n                <p>{description}</p>\n            </div>\n        </main>\n    );\n};\n\nexport default Games;","import React, { useState } from 'react';\nimport firebase from '../../firebase';\n\nconst Click: React.FC = () => {\n    const [score, setScore] = useState<number>(0);\n    const [playerName, setPlayerName] = useState<string>('Anonymous'); \n\n    const incrementScore = () => {\n        setScore(score + 1);\n    };\n\n    const updatePlayerName = (event: any) => {\n        setPlayerName(event.target.value);\n        console.log(playerName);\n    }\n\n    const updateScore = () => {\n        if (score !== 0) {\n            const db = firebase.firestore();\n            db.collection('games').doc('click').collection('highscores').add({\n                name: playerName,\n                score: score\n            });\n            // Reset Game\n            setScore(0);\n            setPlayerName('Anonymous');\n        }\n    };\n\n    return (\n        <main className=\"Click-Game\">\n            <button className=\"click-button\" onClick={incrementScore}>Click!</button>\n            <div className=\"score\">{score}</div>\n            <form className=\"playerName\">\n                <label className=\"caption\">Player Name</label>\n                <input className=\"input\" type=\"text\" onChange={updatePlayerName} placeholder=\"Anonymous\" />\n            </form>\n            \n            <button className=\"score-submit\" onClick={updateScore}>Submit My Score!</button>\n        </main>\n    );\n};\n\nexport default Click;","import React from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport Click from './games/Click';\n\nconst Play: React.FC = () => {\n\n    let { gameId } = useParams();\n\n    if (gameId === 'click') {\n        return (\n            <Click />\n        );\n    } else if (gameId === 'snake') {\n        return (\n            <div>\n                'Snake Game coming soon...'\n            </div>\n        );\n    } else {\n        return (\n            <div>\n                {gameId}\n            </div>\n        );\n    }\n\n};\n\nexport default Play;","import React, { useState, useEffect } from 'react';\nimport firebase from '../firebase';\nimport {\n    useRouteMatch,\n    Link,\n    Switch,\n    Route\n} from 'react-router-dom';\n\nimport Games from './Games';\nimport Play from './Play';\n\nconst GamesList: React.FC = () => {\n    const [gamesList, setGamesList] = useState<Array<any>>();\n\n    useEffect(() => {\n        const db = firebase.firestore();\n        db.collection('games').onSnapshot(snapshot => {\n            setGamesList(snapshot.docs);\n        });\n    }, []);\n\n    let match = useRouteMatch();\n    let gamesItems = gamesList;\n\n    if (gamesItems) {    \n        gamesItems = gamesItems.map((game) => {\n            let localGame: boolean = false;\n            if (game.data().localGame) {\n                localGame = game.data().localGame;\n            }\n            return (\n                <Link to={`${match.url}/${game.data().id}`} key={game.id}>\n                    <Games key={game.id} title={game.data().title} id={game.data().id} description={game.data().description} localGame={localGame} />\n                </Link>\n            );\n        });\n    }\n\n    return (\n        <main className=\"GamesList\">\n            \n            <Switch>\n                <Route exact path={`${match.path}`}>\n                    <h1 className=\"games-list-container-title\">Games List</h1>\n                    <div className=\"games-list-container\">\n                        {gamesItems}\n                    </div>\n                </Route>\n                <Route path={`${match.path}/:gameId`}>\n                    <div>\n                        <Play />\n                    </div>\n                </Route>\n            </Switch>\n\n            {/* <HighScores /> */}\n        </main>\n    );\n};\n\nexport default GamesList;","import React from 'react';\n// import '../scss/main.scss';\n\nconst About: React.FC = () => {\n    return (\n        <main className=\"About\">\n            <p>\n                When Will created his very first <a href=\"https://github.com/withoutwax/Snake-Game\" target=\"_blank\" rel=\"noopener noreferrer\"><span role=\"img\" aria-label=\"snake\">🐍</span> Snake Game</a>, he wanted to create a small forum where he can store score and also allow him to compete with his friends.\n            </p>\n            <p>\n                Thus, this is a space where Will shares the games that he made and also allow his friends and other people in the world to play! <span role=\"img\" aria-label=\"game\">👾</span>\n            </p>\n            <p>\n                Feel free to look around and play few games that seems interesting! You can also compete with Will\n            </p>\n            <p>\n                Hope you enjoy!\n            </p>\n        </main>\n    );\n};\n\nexport default About;","import React, { useEffect, useState } from 'react';\nimport firebase from '../firebase';\n\ninterface ScoreProps {\n    title: string,\n    id: string\n}\n\nconst Score: React.FC<ScoreProps> = ({title, id}) => {\n    const [scores, setScores] = useState();\n\n    useEffect(() => {\n        const db = firebase.firestore();\n        db.collection('games').doc(id).collection('highscores').orderBy('score', 'desc').limit(10).onSnapshot(snapshot => {\n            \n            setScores(snapshot.docs);\n        });\n    }, [id]); // NOTE: without [id] (and use []), it gives an minor error.\n\n    let scoreItems: any = scores;\n    if (scores) {\n        scoreItems = scores.map((score: any, i: any) => \n        <li key={i}>{i+1}. {score.data().name} : {score.data().score}</li>\n        );\n    };\n    if (scoreItems && scoreItems.length === 0) {\n        scoreItems = 'There is no High Score for this game, yet.';\n    }\n\n    return (\n        <div className=\"Score\">\n            <h4 className=\"game-title\">{title}</h4>\n            <ul>\n                {scoreItems}\n            </ul>\n        </div>\n    );\n};\n\nexport default Score;","import React, { useEffect, useState } from 'react';\nimport firebase from '../firebase';\n\nimport Score from './Score';\n\nconst HighScores: React.FC = () => {\n    const [games, setGames] = useState<Array<any>>();\n\n    useEffect(() => {\n        const db = firebase.firestore();\n        db.collection('games').onSnapshot(snapshot => {\n            setGames(snapshot.docs);\n        });\n    }, []);\n\n    let gamesItems = games;\n    if (gamesItems) {\n        gamesItems = gamesItems.map((game) => {\n            return (\n                <Score key={game.id} title={game.data().title} id={game.data().id}/>\n            );\n        });\n    }\n\n    return (\n        <div className=\"HighScore\">\n            <h2 className=\"main-title\">High Scores</h2>\n            <div className=\"Score-Container\">{gamesItems}</div>\n        </div>\n    );\n};\n\nexport default HighScores;","import React from 'react';\n\nconst Footer: React.FC = () => {\n    let currentYear = new Date().getFullYear();\n\n    return (\n        <footer>\n            <p><span role=\"img\" aria-label=\"pingpong\">🕹</span> Copyright &copy; {currentYear} Will Kim <span role=\"img\" aria-label=\"pingpong\">👾</span></p>\n            <p>Invely's</p>\n        </footer>\n    );\n};\n\nexport default Footer;","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  NavLink\n} from 'react-router-dom';\n\nimport Home from './components/Home';\nimport GamesList from './components/GamesList';\nimport About from './components/About';\nimport HighScores from './components/HighScores';\nimport Footer from './components/Footer';\n\nimport logo from './assets/joystick.png';\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <Router basename={process.env.PUBLIC_URL}>\n        <header className=\"App-header\">\n          <div className=\"App-logo-container\">\n            <NavLink to=\"/\"><img src={logo} className=\"App-logo\" alt=\"logo\" /></NavLink>\n            <a className=\"back-button\" href=\"https://www.withoutwax.me\"><span role=\"img\" aria-label=\"back-button\">◀️</span> to Blog</a>\n          </div>\n          <nav className=\"App-nav\">\n            <ul>\n              <li><NavLink to=\"/game\">Games<span role=\"img\" aria-label=\"joystick\">🕹</span></NavLink></li>\n              <li><NavLink to=\"/about\">About</NavLink></li>\n            </ul>\n          </nav>\n          <HighScores />\n        </header>\n\n        <main>\n          <Switch>\n            <Route exact path=\"/\"><Home/></Route>\n            <Route path=\"/game\"><GamesList/></Route>\n            <Route path=\"/about\"><About/></Route>\n            <Route><Home/></Route>\n          </Switch>\n        </main>\n      </Router>\n\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './scss/main.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}