{"version":3,"sources":["scripts/utils.js","click/click.js"],"names":["displayHighScore","scoreList","i","length","name","data","substring","score","scoreBoard","document","querySelector","li","createElement","textContent","appendChild","player_name","num_clicks","scoreUpdate","innerHTML","toggleSubmitButton","highScoreUpdate","player_name_update","firstChild","removeChild","value","db","collection","add","then","console","log","catch","error","reset","gotData","errData","err","disabled","addEventListener","orderBy","onSnapshot","snapshot","docs"],"mappings":";AAoBC,aApBM,SAASA,EAAiBC,GAEtBC,IADHA,IAAAA,EAAI,EACDA,GAAK,IAAMA,EAAID,EAAUE,QAAQ,CAEhCC,IAAAA,EAAOH,EAAUC,GAAGG,OAAOD,KAE3BA,EAAKD,OAAS,KACdC,EAAOA,EAAKE,UAAU,EAAG,KAEzBC,IAAAA,EAAQN,EAAUC,GAAGG,OAAOE,MAG5BC,EAAaC,SAASC,cAAc,cAEpCC,EAAKF,SAASG,cAAc,MAChCD,EAAGE,YAAeT,EAAO,MAAQG,EAEjCC,EAAWM,YAAYH,GACvBT,GAAK,GAEZ,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,iBAAA;;ACqEA,aAzFD,IAAA,EAAA,QAAA,oBAEIa,EAAc,YACdC,EAAa,EAQjB,SAASC,IACLD,GAAc,EACFP,SAASC,cAAc,UAC7BQ,UAAYF,EAClBG,IAGJ,SAASC,IAGEZ,IAFHa,IAAAA,EAAqBZ,SAASC,cAAc,eAC5CF,EAAaC,SAASC,cAAc,cACjCF,EAAWc,YACdd,EAAWe,YAAYf,EAAWc,YAKN,IAA5BD,EAAmBG,QACnBT,EAAcM,EAAmBG,OASrCC,GAAGC,WAAW,SAASC,IAAI,CACvBvB,KAAMW,EACNR,MAAOS,IAEVY,KAAK,WACFC,QAAQC,IAAI,uBAEfC,MAAM,SAASC,GACZH,QAAQG,MAAM,2BAA4BA,KAG9CC,IAQJ,SAASC,EAAQ7B,GAGNG,IADHA,IAAAA,EAAaC,SAASC,cAAc,cACjCF,EAAWc,YACdd,EAAWe,YAAYf,EAAWc,aAIrBjB,EAAAA,EAAAA,kBAAAA,GAGrB,SAAS8B,EAAQC,GACbP,QAAQC,IAAI,UACZD,QAAQC,IAAIM,GAGhB,SAASH,IACLjB,EAAa,EACbD,EAAc,YACVR,IAAAA,EAAQE,SAASC,cAAc,UACnCD,SAASC,cAAc,eAAec,MAAQ,GAC9CjB,EAAMW,UAAY,EAElBC,IAGJ,SAASA,IAEuB,GADXV,SAASC,cAAc,UACzBQ,UACXT,SAASC,cAAc,0BAA0B2B,UAAW,EAE5D5B,SAASC,cAAc,0BAA0B2B,UAAW,EAlFpE5B,SAASC,cAAc,iBAAiB4B,iBAAiB,QAASrB,GAAa,GAC/ER,SAASC,cAAc,0BAA0B4B,iBAAiB,QAASlB,GAAiB,GAE5FD,IA4CAM,GAAGC,WAAW,SAASa,QAAQ,QAAS,QAAQC,WAAW,SAAAC,GACvDP,EAAQO,EAASC","file":"click.c26d0e3e.js","sourceRoot":"..","sourcesContent":["export function displayHighScore(scoreList) {\n    let i = 0;\n    while (i <= 10 && i < scoreList.length) {\n        // console.log(i);\n        let name = scoreList[i].data().name;\n        // console.log(name, name.length);\n        if (name.length > 10) {\n            name = name.substring(0, 10);\n        }\n        let score = scoreList[i].data().score;\n        // console.log(score);\n\n        let scoreBoard = document.querySelector(\"#highScore\");\n\n        let li = document.createElement(\"li\",);\n        li.textContent =  name + \" : \" + score;\n\n        scoreBoard.appendChild(li);\n        i += 1;\n    }\n}","import { displayHighScore } from \"../scripts/utils\";                                \n\nlet player_name = \"Anonymous\";\nlet num_clicks = 0;\n\ndocument.querySelector(\"#click-button\").addEventListener(\"click\", scoreUpdate, false);\ndocument.querySelector(\"#highScoreUpdateButton\").addEventListener(\"click\", highScoreUpdate, false);\n\ntoggleSubmitButton();\n\n// UPDATE SCORE\nfunction scoreUpdate() {\n    num_clicks += 1;\n    let score = document.querySelector(\"#score\");\n    score.innerHTML = num_clicks;\n    toggleSubmitButton();\n}\n\nfunction highScoreUpdate() {\n    let player_name_update = document.querySelector(\"#playerName\");\n    let scoreBoard = document.querySelector(\"#highScore\");\n    while (scoreBoard.firstChild) {\n        scoreBoard.removeChild(scoreBoard.firstChild);\n    }\n\n    // Checks if there is a player name exist\n    // console.log(player_name_update.value);\n    if (player_name_update.value != \"\") {\n        player_name = player_name_update.value;\n    }\n\n    // Update the Score!\n    // db.collection('click').push({\n    //     name: player_name,\n    //     score: num_clicks\n    // });\n\n    db.collection(\"click\").add({\n        name: player_name,\n        score: num_clicks\n    })\n    .then(function() {\n        console.log(\"Score Registered!\");\n    })\n    .catch(function(error) {\n        console.error(\"Error writing document: \", error);\n    });\n\n    reset();\n}\n\n// DISPLAY HIGHSCORE\ndb.collection(\"click\").orderBy(\"score\", \"desc\").onSnapshot(snapshot => {\n    gotData(snapshot.docs);\n});\n\nfunction gotData(data) {\n    // Resetting the Screen\n    let scoreBoard = document.querySelector(\"#highScore\");\n    while (scoreBoard.firstChild) {\n        scoreBoard.removeChild(scoreBoard.firstChild);\n    }\n\n    // OUTPUT HIGHSCORE =================\n    displayHighScore(data);\n}\n\nfunction errData(err) {\n    console.log('Error!');\n    console.log(err);\n}\n\nfunction reset() {\n    num_clicks = 0;\n    player_name = \"Anonymous\";\n    let score = document.querySelector(\"#score\");\n    document.querySelector('#playerName').value = \"\";\n    score.innerHTML = 0;\n\n    toggleSubmitButton();\n}\n\nfunction toggleSubmitButton() {\n    let score_test = document.querySelector(\"#score\");\n    if (score_test.innerHTML == 0) {\n        document.querySelector(\"#highScoreUpdateButton\").disabled = true;\n    } else {\n        document.querySelector(\"#highScoreUpdateButton\").disabled = false;\n    }\n}\n"]}